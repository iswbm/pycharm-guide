8.10 【绝佳工具 06】开启静态代码分析检查
========================================

.. image:: http://image.iswbm.com/20200804124133.png

对于编译型的语言，如
Java，需要将代码编译成机器可识别的语言才可运行，在编译过程中，就可以通过分析或检查源程序的语法、结构、过程、接口等来检查程序的正确性，找出代码隐藏的错误和缺陷。这个过程叫做静态代码分析检查。

那对于 Python
这种解释型的语言来说，代码是边运行边翻译的，不需要经过编译这个过程。很多肉眼无法一下子看出的错误，通常都是跑一下（反正跑一下这么方便）才能发现。

由于Python 运行是如此的方便，以至于我们都不太需要关注静态分析工具。

但也不是说，静态分析工具完全没有用武之地，我认为还是有。

如果你的编码能力还没有很成熟，代码中可以有许许多多的隐藏bug，由于 Python
是运行到的时候才解释，导致一次运行只能发现一个错误，要发现100个bug，要运行100次，数字有点夸大，其实就是想说，如果这么多的错误都能通过一次静态检查发现就立马修改，开发调试的效率就可以有所提升。当然啦，并不是说所有的错误静态分析都能提前发现，这点希望你不要误解。

做为 Python 最强 IDE，PyCharm本身内置了这个功能，不需要你安装任何插件。

你只需要像下面这样点击项目文件夹，然后右键，选择
``Inspect Code``\ ，就可以开启静态检查。

.. image:: http://image.iswbm.com/20190616211359.png

我对开源组件 nova 的静态检查发现，其有不规范的地方有数千处。

.. image:: http://image.iswbm.com/20190616214310.png
